a <- avaible.packages()
a <- available.packages()
head(rownames(a),10)
a
install.packages("slidify")
install.packageS("devtools")
install.packages("devtools")
search()
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
x <- 111
x
print(x)
x <= 1:20
x <- 1:200
x
1
1.0
1.2
2.3L
333L
vector(integer,10)
1/0
Inf * -1
Inf * 0
1/Inf
a <- 3:20
a
a.attributes()
attributes(a)
x<-vector('numeric', length = 22)
x
x[4]=33
x
x <- c ('a','ffff','q')
x
x <- c(1,2,4.0,44)
x
x<-c(1,2,4.2,33)
x
t<-c(222.123,'qqq')
t
x<-c(T,11)
x
x<-1:111
class(x)
as.numeric(x)
as.character(x)
as.logical(x)
True
TRUE
T
true
x = c(T,T,F,T)
x
as.character(x)
x= (1,2,3+9i)
x <- (1,2,'a',2+9i)
x <- list(1,2,'a',2+9i)
x
x<-list(2.2+22i)
x
x<-list(T,2,22.333,'qqq',F)
class(x)
class(x[0])
class(x[1])
class(x[1][1])
x<-list(1,2,4:5,('a',F))
x<-list(1,2,4:5,list('a',F))
x
x <- c(1,2,2)
attributes(x)
a <- matrix(ncol=3, nrow=11)
a
attributes(a)
dim(a)
a<-matirx(1:100,nrow=2, ncol=4)
a<-matrix(1:1000,nrow=2, ncol=3)
a<-matix(1:10,nrow=2, ncol=5)
a<-matrix(1:10,nrom=2,ncol=4)
a<-matrix(1:10,nrow=2, ncol=5)
a
a<-matix(1:3, nrow=5, ncol=3)
a<-matrix(1:3,nrow=5, ncol=3)
a
a<-matrix(1:4,nrow=5, ncol=3)
a = 1:10
a
dim(a) = c(5,2)
a
a = 1:10
b=91:100
rbind(a,b)
cbind(a,b)
rbind(a,a,b)
rbind(cbind(a,b),a)
rbind(cbind(a,b),cbind(a,b))
c = rbind(a,b)
c
c[2][3]
c[2,3]
c[2,3]=4+9i
c
x<-1:11
unfactor(x)
unclass(x)
x <- factor(c('a','vv','a','q','vv',a))
unclass(x)
table(x)
x
x <- factor(c('aa','qqq','aa','qqq'), levels=('qqq','aa'))
x <- factor(c('aa','qqq','aa','qqq'), levels=c('qqq','aa'))
x
table(x)
unclass(x)
x<-list(list('s',5),6,7,4+5i)
x
unclass(X)
unclass(x)
b<-c(1,2,3)
as.logical(b)
b<=c('a','c','v')
as.numerical(b)
as.numeric(b)
as.logical(b)
b<-c('a','c','b')
as.numeric(b)
a = as.numeric(b)
isna(a)
is.na(a)
is.nan(a)
x<-data.frame(a=1:3,c=c('q','qq','qqq'))
unclass(x)
row.names(x)
ncol(x)
nrow(x)
x<-url('http://spoj.pl','r')
head(x)
t<-readLines(x)
head(t)
t
a <- list(list(5,6,5,5),list(0,0,0,3))
a
a[1]
rm t
rm(t)
a
a[1]
a[1][2]
a[[1]][[2]]
a <- matrix(c(1,0,0,1),nrow=2,ncol=2)
a
b <- matrix(rep(111,4), nrow=2, ncol=3)
b <- matrix(rep(111,4), nrow=2, ncol=2)
a*b
a %*% b
install.packages("swirl")
library("swirl")
swirl()
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
y <- x[[1]]
unclass(y)
y
c(1,2,3)
y
class(y)
a<-list(1,2,3)
class(a)
x <- 1:4
y<-2:3
x+Y
x+y
z<-x+y
z
type(z)
class(z)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
x
x>=11
x[x>=11]
x
y<-x[x>=11]
t
y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>=11]
x[x>=11]<-4
x
x<-4
x
x = c(T,T,F,T)
x<-4
x
x = c(T,T,F,T)
y=c(1,2,3,4)
y[x]<-8
y
data <-read.csv('C:\\R_projects\\hw1_data.csv')
data
head(data)
last(data)
tale(data)
data.head)
head(data)
tail(data)
tail(data,n=2)
data[47]
data[47,]
q <- data.frame.isna()
q <- data.isna()
isna(data)
is.na(data)
q <- is.na(data)
a<-matrix(0,nrow = 153, ncol = 6)
a[q]<-1
a
sum(a)
x<-matrix(1:4,nrow=2,ncol=2)
sum(x)
data.Ozone
head(data)
a<-data[,1]
a
b<-rep(0,153)
b
b[is.na(a)]<-1
b
sum(b)
a<-c(1,2,NA,4)
a
mean(a)
a<-c(1,2,3)
mean(a)
a<-data[,1]
a
b<-data[!is.na(a)]
b<-a[!is.na(a)]
b
length(b)
mean(b)
a<-data[data$Ozone>31 && data$Temp>90]
a
a<-data[data$Ozone>31]
a<-data[data$Ozone>31]
data$Ozone>31
data$Ozone>31 && data#Temp>90
data$Ozone>31 && data$Temp>90
data$Temp>90
a <- C(T,T,F)
a <- c(T,T,F)
b<- c(T,F,T)
a&&b
a&b
a<-data[data$Ozone>31 & data$Temp>90]
data$Ozone>31 & data$Temp>90
a<-data[data$Ozone>31 & data$Temp>90]
a<-data[data$Ozone>31,,,data$Temp>90,,]
a<-data[data$Ozone>31 & data$Temp>90,]
a
a$Temp
b<-a$Temp
b
b[!is.na(b)]
c<-b[!is.na(b)]
c
mean(c)
a
b<-a$Solar.R
b
mean(b[!is.na(b)])
a<-data[data$Month==6,]
a
b<-a$Temp
b
mean(b)
a<-data[data$Month==5,]
b <- a$Ozone
b
max(b)
max(b[!is.na(b)])
formals(fun=read.csv)
args(lm)
range(10)
1:10
0:2
source('C:/development/OpenCorpora/FactExtAutoAssesst/dataAnalysis/restore_full_corpus.R')
source('C:/development/OpenCorpora/FactExtAutoAssesst/dataAnalysis/restore_full_corpus.R')
'12' + 'dsgf'
'12' ++ 'dsgf'
source('C:/development/OpenCorpora/FactExtAutoAssesst/dataAnalysis/restore_full_corpus.R')
a <- c(1,2,3)
b <- c('aa', 'tt', 'zz')
a
b
q <- data.frame(a = a, b = b)
q
?commandArgs
commandArgs()
a = c(1,2,3)
a
a[-1]
length(a)
len(a)
a[length(a)]
a[0]
a[1]
a <- c(1,2,3,1,2,3,4,5)
b <- as.factor(a)
b
a2 <- c(1,2,3,4,5,6,6,4,5,2)
b2 <- as.factor(a2)
b2
levels(b) <- levels(b2)
b
table(B)
table(b)
t1 <- c(1,2,3,4,5)
t2 <- c(5,4,3,2,1)
t3 <- data.frame(t1,t2)
t3
colnames(t3)
coltypes(t3)
t1
t1 <- as.factor(t1)
t2 <- as.factor(t2)
t3 <- data.frame(t1,t2)
coltypes(t3)
colnames(t3)
t3
t3$t1
for (i in colnames(t3)) { print(t3[,i]) }
b2
for (i in colnames(t3)) { levels(t3[,i]) <- levels(b2) }
t3$t1
t3$t1
types(t3$t1)
typeof(t3$t1)
typeof(t3$t1) == "integer"
typeof(B)
typeof(b)
1===1
1=1
1==1
t3
for (i in colnames(t3)) { if (i == 't1') {continue} print(i) }
for (i in colnames(t3)) { print(i) }
for (i in colnames(t3)) { if (i != 't1') { print(i) } }
a <- c('a','b','d','e')
a
b <- as.factor(a)
b
a2 <- c('a','b', 'c', 'd', 'e')
b2 <- as.factor(a2)
b2
levels(b) <- levels(b2)
b
a
b <- as.factor(a)
b
b2
levels(b) < levels(b2)
levels(b) <- levels(b2)
b
as.character(b)
b <- as.factor(a)
b
as.character(b)
b
temp <- as.character(b)
b
levels(b) <- levels(b2)
levels(b)
b <- as.factor(temp)
b
?as.factor
factor(temp, levels = levels(b2))
b <- as.factor(a)
b
b_new <- factor(as.character(b), levels = levels(b2))
b_new
a <- c(1,2,3,45)
b <- as.factor(A)
b <- as.factor(a)
b
is.factor(A)
is.factor(a)
is.factor(b)
T && G
T && F
T && T
a = c('aa', 'bb', 'dd', 'ff')
b = as.factor(a)
b
a2 = c('cc','ee','aa', 'bb', 'dd', 'ff')
b2 = as.factor(a2)
b2
t = factor(as.character(b), levels = levels(b2))
t
sample(0:10, 20, replace=T)
random_seed <- sample(0:9, 1000, replace=T)
ttt <- random_seed >= 8
table(ttt)
setwd("C:\\development\\GitHub\\opencorpora\\Dialog2016_track\\DataAnalysis")
getwd()
data <- iris()
library(datasets)
data <- iris()
iris
data <- iris
summary(data)
data[23,"Species"]
data[44,"Species"]
data[144,"Species"]
source("classifier.R")
source("classifier.R")
source("classifier.R")
source("classifier.R")
model <- train_classifier(data, "Species")
ttt <- sample(c(T,F), n= 150)
ttt <- sample(0:1, n= 150)
ttt <- sample(C(T,F), 150, replace=T)
ttt <- sample(0:1, 150, replace=T)
data$is_test <- ttt == 0
table(data$is_test)
model <- train_classifier(data, "Species")
souce("classifier.R")
source("classifier.R")
model <- train_classifier(data, "Species")
ttt <- classify(data, model)
source("classifier.R")
ttt <- classify(data, model)
length(ttt)
table(ttt == data[data$is_test,]$Species)
source("classifier.R")
model2 <- train_classifier(data, "Species")
summary(data)
model2 <- train_classifier(data, "Species")
data[!data$is_test, col_name]
data[!data$is_test, "Species"]
source("classifier.R")
model2 <- train_classifier(data, "Species")
source("classifier.R")
model2 <- train_classifier(data, "Species")
source("classifier.R")
model2 <- train_classifier(data, "Species")
source("classifier.R")
model2 <- train_classifier(data, "Species")
source("classifier.R")
model2 <- train_classifier(data, "Species")
source("classifier.R")
model2 <- train_classifier(data, "Species")
source("classifier.R")
model2 <- train_classifier(data, "Species")
source("classifier.R")
data$token_objects <- data$Species
data$Species <- data$is_test
source("classifier.R")
model2 <- train_classifier(data, T)
ttt2 <- classify(data, model2)
table(ttt=tt2)
table(ttt=ttt2)
table(ttt==ttt2)
source("classifier.R")
model3 <- train_classifier(data, T)
ttt3 <- classify(data, model3)
table(ttt==ttt3)
